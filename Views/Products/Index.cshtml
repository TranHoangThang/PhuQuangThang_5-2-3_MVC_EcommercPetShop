@{
    ViewData["Title"] = "Products";
}
@model List<PetShop.Models.Products>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Products - PetShop</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href='https://fonts.googleapis.com/css?family=Rubik' rel='stylesheet'>
    <style>
        body {
            background-color: #f2f2f2;
            font-family: 'Rubik';
        }

        .section {
            font-weight: bold;
            padding: 0 15px;
        }

        .breadcrumb-item a {
            text-decoration: none;
            color: #0a2351;
        }

        .breadcrumb-item.active {
            color: slategray;
        }

        .main h1 {
            color: #0a2351;
            font-size: 1.75em;
            font-weight: bold;
        }

        .search-container {
            position: relative;
            max-width: 612px;
            width: 100%;
        }

        #searchBar {
            width: calc(100% - 150px);
            border: 1.5px solid #0a2351;
        }

        #searchButton, #clearButton {
            height: 36px;
            line-height: 1.5;
        }

        #searchButton {
            margin-left: 5px;
            color: #0a2351;
            font-weight: bold;
        }

        #clearButton {
            margin-left: 5px;
            color: #f2f2f2;
            font-weight: bold;
        }

        #suggestions {
            border: 1px solid #f2f2f2;
            border-radius: .25rem;
            background-color: #f2f2f2;
            z-index: 1000;
            top: 100%;
            left: 0;
        }

        #suggestions .list-group-item {
            cursor: pointer;
        }

        #suggestions .list-group-item:hover {
            background-color: #f2f2f2;
        }

        .total {
            position: relative;
            top: -5px;
            margin-bottom: 0px;
        }

        .total p {
            color: #0a2351;
            font-size: 1em;
            font-weight: bold;
        }

        .table {
            color: #0a2351;
            font-size: 0.9em;
            font-weight: bold;
        }
        .Page {
            display: flex;
        }

        .Page a {
            margin: 0 5px;
            padding: 6px 14px;
            background-color: white;
            text-decoration: none;
            color: #0a2351;
            font-size: 0.9em;
            font-weight: bold;
            border-radius: 4px;
            border: 1.5px solid #0a2351;
        }

        .Page a.active {
            background-color: #4CAF50;
            color: white;
        }

        .Page a:hover {
            background-color: #4CAF50;
            color: white;
        }

        .empty {
            background-color: #f2f2f2;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
        }

        .empty h1 {
            text-align: center;
            color: #0a2351;
            font-size: 1.5em;
            font-weight: bold;
        }

        .empty p {
            text-align: center;
            color: black;
            font-size: 1em;
            font-weight: normal;
        }
    </style>
</head>
<body>
    <div class="section">
        <div class="main">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Products</li>
                </ol>
            </nav>

            <div class="d-flex justify-content-between align-items-center mb-3">
                <h1>Products for Pet</h1>

                <div class="search-container d-flex flex-grow-1 justify-content-end align-items-center">
                    <input type="text" id="searchBar" class="form-control" placeholder="Search for Products..." aria-label="Search">
                    <button type="button" id="searchButton" class="btn btn-warning ms-2">Search</button>
                    <button type="button" id="clearButton" class="btn btn-secondary ms-2">Clear</button>
                    <ul id="suggestions" class="list-group position-absolute" style="max-height: 200px; overflow-y: auto; display: none; width: 100%; margin-top: 0;"></ul>
                </div>
            </div>
        </div>
        <div class="total">
            <p class="total" data-total="@ViewBag.TotalProducts">Total Products: @ViewBag.TotalProducts</p>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="width: 15%;">
                           <img src="@item.ImageUrl" alt="ProductImages" style="width: 80px; height: 80px; object-fit:cover;" />
                        </td>
                        <td style="width: 25%; padding-top: 15px;">@item.Name</td>
                        <td style="width: 30%; padding-top: 15px;">@item.Description</td>
                        <td style="width: 10%; padding-top: 15px;">$@item.Price</td>
                        <td style="width: 25%; padding-top:;">
                            <form asp-action="AddToCart" method="post">
                                <input type="hidden" name="id" value="@item.Id" />
                                <input type="number" name="quantity" class="quantity" min="1" value="1" style="padding: 4px 8px; width: 128px;"/>
                                <button type="submit" class="btn btn-outline-primary" id="addToCartBtn" data-url="@Url.Action("AddToCart", "Products")" style="padding: 4px 8px; width: 8em; margin-bottom: 2px; font-weight: bold;">Add to Cart</button>
                            </form>
                        </td>
                        <td>
                            <form asp-action="AddToWishlist" method="post">
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn btn-info" style="padding: 4px 8px; width: 8em; color: white; font-weight: bold;">Wishlist</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (ViewBag.TotalProducts > 4)
        {
            <div class="Page">
                @if ((ViewData["CurrentPage"] as int?) > 1)
                {
                    <a href="@Url.Action("Index", new { page = (ViewData["CurrentPage"] as int?) - 1 })">Previous</a>
                }

                @for (int i = 1; i <= (ViewData["TotalPages"] as int?); i++)
                {
                    <a href="@Url.Action("Index", new { page = i })" class="@(i == (ViewData["CurrentPage"] as int?) ? "active" : "")">@i</a>
                }

                @if ((ViewData["CurrentPage"] as int?) < (ViewData["TotalPages"] as int?))
                {
                    <a href="@Url.Action("Index", new { page = (ViewData["CurrentPage"] as int?) + 1 })">Next</a>
                }
            </div>
        }
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchBar = document.getElementById('searchBar');
            const searchButton = document.getElementById('searchButton');
            const clearButton = document.getElementById('clearButton');
            const suggestionsBox = document.getElementById('suggestions');
            const tableBody = document.querySelector('table tbody');
            const totalProductsElement = document.querySelector('.total p');
            const addToCartBtns = document.querySelectorAll('#addToCartBtn');
            const addToWishlistBtns = document.querySelectorAll('form[action$="AddToWishlist"] button');
            const totalProducts = parseInt(totalProductsElement.dataset.total, 10);

            function updateTable(products) {
                tableBody.innerHTML = '';
                const totalProductsElement = document.querySelector('.total p');
                const tableElement = document.querySelector('table');
                const noProductsMessage = document.getElementById('noProductsMessage');
                const existingEmptyDiv = document.querySelector('.empty');

                if (existingEmptyDiv) {
                    existingEmptyDiv.remove();
                }

                if (products.length > 0) {
                    products.forEach(product => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                                <td style="width: 15%;">
                                    <img src="${product.imageUrl}" alt="ProductImages" style="width: 80px ;height: 80px;object-fit:cover;" />
                                </td>
                                <td style="width: 25%; padding-top: 15px;">${product.name}</td>
                                <td style="width: 30%; padding-top: 15px;">${product.description}</td>
                                <td style="width: 10%; padding-top: 15px;">$${product.price}</td>
                                <td style="width: 25%;">
                                    <form action="@Url.Action("AddToCart", "Products")" method="post">
                                        <input type="hidden" name="id" value="${product.id}" />
                                        <input type="number" name="quantity" class="quantity" min="1" value="1" style="padding: 4px 8px; width: 128px;"/>
                                        <button type="submit" class="btn btn-outline-primary" id="addToCartBtn" data-url="@Url.Action("AddToCart", "Products")" style="padding: 4px 8px; width: 8em; margin-bottom: 2px; font-weight: bold;">Add to Cart</button>
                                    </form>
                                </td>
                                <td>
                                    <form action="@Url.Action("AddToWishlist", "Products")" method="post">
                                        <input type="hidden" name="id" value="${product.id}" />
                                        <button type="submit" class="btn btn-info" style="padding: 4px 8px; width: 8em; font-size: 1rem; color: white; font-weight: bold;">Wishlist</button>
                                    </form>
                                </td>
                            `;
                        tableBody.appendChild(row);
                    });
                    totalProductsElement.textContent = `Total Products: ${products.length}`;

                    if (products.length > 0) {
                        document.querySelector('.Page').style.display = 'none';
                    } else {
                        document.querySelector('.Page').style.display = 'none';
                    }

                } else {
                    totalProductsElement.style.display = 'none';
                    tableElement.style.display = 'none';

                    if (products.length > 0) {
                        document.querySelector('.Page').style.display = 'none';
                    } else {
                        document.querySelector('.Page').style.display = 'none';
                    }

                    const emptyDiv = document.createElement('div');
                    emptyDiv.classList.add('empty');
                    emptyDiv.innerHTML = `
                        <img src="@Url.Content("~/images/out-of-stock.png")" alt="out of stock" class="empty-cart-image" style="max-width: 200px; margin-top: 25px; margin-bottom: 25px;" />
                        <h1 class="no-items-message">No Product Found</h1>
                        <p>Your search did match any products<br />Please try again...</p>
                    `;

                    tableElement.parentNode.appendChild(emptyDiv);
                }
            }

            function showTemporaryTooltip(button, message) {
                const tooltip = new bootstrap.Tooltip(button, {
                    trigger: 'manual',
                    title: message,
                    placement: 'top'
                });
                tooltip.show();
                setTimeout(() => {
                    tooltip.hide();
                }, 2000);
            }

            function performSearch(query) {
                if (!query) {
                    console.error("Query is undefined or null.");
                    return;
                }

                const url = '@Url.Action("Search", "Products")?query=' + encodeURIComponent(query);
                console.log("Requesting URL:", url);

                fetch(url)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        updateTable(data);
                    })
                    .catch(error => {
                        console.error('Error fetching search results:', error);
                    });
            }

            function fetchSuggestions(query) {
                if (query.length > 0) {
                    fetch(`/Products/Search?query=${encodeURIComponent(query)}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            suggestionsBox.innerHTML = '';
                            if (data.length > 0) {
                                suggestionsBox.style.display = 'block';
                                data.forEach(item => {
                                    const listItem = document.createElement('li');
                                    listItem.className = 'list-group-item';
                                    listItem.textContent = item.name;
                                    listItem.addEventListener('click', () => {
                                        searchBar.value = item.name;
                                        suggestionsBox.style.display = 'none';
                                        performSearch(item.name);
                                    });
                                    suggestionsBox.appendChild(listItem);
                                });
                            } else {
                                suggestionsBox.style.display = 'none';
                            }
                        })
                        .catch(error => {
                            console.error('Error fetching suggestions:', error);
                        });
                } else {
                    suggestionsBox.style.display = 'none';
                }
            }

            searchButton.addEventListener('click', function () {
                const query = searchBar.value.trim();
                performSearch(query);
            });

            clearButton.addEventListener('click', function () {
                searchBar.value = '';
                performSearch('');
                window.location.reload();
            });

            searchBar.addEventListener('input', function () {
                const query = searchBar.value.trim();
                fetchSuggestions(query);
            });

            document.addEventListener('click', function (e) {
                if (!searchBar.contains(e.target) && !suggestionsBox.contains(e.target)) {
                    suggestionsBox.style.display = 'none';
                }
            });

            if (totalProducts === 0) {
                document.querySelector('table').style.display = 'none';
                totalProductsElement.style.display = 'none';
            }

            addToCartBtns.forEach(button => {
                button.addEventListener('click', function () {
                    showTemporaryTooltip(button, 'Product has been added to your cart');
                });
            });

            addToWishlistBtns.forEach(button => {
                button.addEventListener('click', function () {
                    showTemporaryTooltip(button, 'Product has been added to your wishlist');
                });
            });
        });
    </script>
</body>
</html>